version: "3.9"
services:
  app:
    build: .
    restart: always
    environment:
      - ENV=production
      - TZ=Asia/Jakarta
    ports:
      - "3002:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./docker/app/log:/app/log
  mqtt_broker:
    image: eclipse-mosquitto
    ports:
      - "${MQTT_OPEN_PORT}:1883"
    volumes:
      - ./docker/mosquitto/config:/mosquitto/config
      - ./docker/mosquitto/data:/mosquitto/data
      - ./docker/mosquitto/log:/mosquitto/log
  db:
    image: "postgres"
    restart: always
    environment:
      PGUSER: ${DB_USERNAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_OPEN_PORT}:5432"
    volumes:
      - ./docker/db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate
    volumes:
      - ./migration:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable",
        "up"
      ]
    depends_on:
      db:
        condition: service_healthy
  loki:
    image: grafana/loki:latest
    volumes:
      - ./docker/loki/config.yaml:/etc/loki/config.yaml
      - ./docker/loki/wal:/wal
    command: -config.file=/etc/loki/config.yaml
  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./docker/promtail/config.yaml:/etc/promtail/config.yaml
      - ./docker/app/log:/var/log/ara-server
    command: -config.file=/etc/promtail/config.yaml
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL}
      - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN}
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    ports:
      - "3003:3000"
    volumes:
      - ./docker/grafana/data:/var/lib/grafana
      - ./docker/grafana/config.ini:/etc/grafana/config.ini
      - ./docker/grafana/provisioning:/etc/grafana/provisioning